FORMAT: 1A
HOST: https://appsco.com/

# AppsCo

    AppsCo helps you securely manage all your private applications access and digital confidential information from any device.

## How to use AppsCo api
    
    Appsco API supports [OAuth protocol](https://oauth.net/2/).
OAuth Request code in order to retrieve token for loggedin user.
    Use client id and scope in order to request equivalent token.
    Redirect uri can be used for redirect response.
    System will return code which you can later use to retrieve access_token.
    

# Dashboard
    
    Dashboard represents holder for application instances. Its content will be presented to user. 
User can have only one dashboard, but many dashboards can be shared to user.
    Sharing a dashboard is creating specific role for that user. This role is used to log all user interactions
    in the system.

# Account

    Account in AppsCo represents user identity. Identity can be used to interact with other software.
    All actions that are preformed by the identity or in the name of the identity are loggeed in the system.

# Application Template

    Applicaiton Template represents import from application catalog list.
    These applications are used by user in order to setup application credentials.
    AppsCo uses them in order to perform login.
Application catalog is a separate system that AppsCo uses in order to provide as many applications as possible to the user.
    This list also holds methods of authentication.
Supported authentication methods
- Form Fill
- Auto Login
- SAML
- JWT

# Application

    Application is an instance of application template and is further used for configuring credentials.
    Application is used to store all user interactions with the resource credentials, login user, share credentials with other users.
Shared Application represents instance of application that is assigned to the user. 


# Application instance (Application Icon)

    Application instance represents instance of application and it is unique for the user.
    Each interaction with application icon is logged in the application it self.
    If application is removed all coresponding application icons will be also removed.



# Request Token [/api/v2/request-token]

    In order to retrieve token user should first perform OAuth request which will provide code.
    Code is used after that to retrieve token. 
    To retrieve token use code and basic authentication using your app credentials (`client_id`, `client_secret`).

### Exchange code and application credentials for token [POST] 

- Request
    - Attributes (object)
        - code: 404oookk4ooccgsws2pxjq4rkeccg0co0wsk8 (string)
    - Headers
    
                Authorization: Basic base64
                    
- Response 200 (application/json)

    - Attributes (Token)

# Explore Api [/api/v2]

    This link can be used to retrieve list of all available resources.
    In order to access this list user first need to authenticate.

## Retrieve api resources [GET]

- Request
    - Headers

            Authorization: token {{TOKEN}}


- Response 200 (applicaiton/json)

        {
          "versions": {
            "v2": {
              "dashboards": "https://www.appsco.com/api/v2/dashboards",
              "me": "https://www.appsco.com/api/v2/me",
              "application": "https://www.appsco.com/api/v2/applications",
              "notifications": "https://www.appsco.com/api/v2/notifications",
              "accounts": "https://www.appsco.com/api/v2/accounts",
              "devices": "https://www.appsco.com/api/v2/devices",
              "vault-cc": "https://www.appsco.com/api/v2/vault-cc",
              "vault-identity": "https://www.appsco.com/api/v2/vault-identity",
              "vault-login": "https://www.appsco.com/api/v2/vault",
              "vault-passport": "https://www.appsco.com/api/v2/vault-passport",
              "vault-secure-note": "https://www.appsco.com/api/v2/vault-secure-note",
              "vault-software-licence": "https://www.appsco.com/api/v2/vault-software-licence"
            }
          }
        }

# Dashboards [/api/v2/dashboards]

    List all dashboards that user has right to access.

### Retrieve Dashboards [GET]

- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)

    - Attributes
        - dashboards (array[string])
        - meta (Paging)

# Dashboard [/api/v2/dashboards/{dashboard_role}]

    Returns dashboard details.

- Parameters
    - dashboard_role: 551 (number) - ID of the Dashboard Role

- Attributes (Dashboard Model)

### Retrieve Dashboard [GET]

- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)

    - Attributes
        - dashboard (Dashboard Model)
        - meta (Dashboard Meta)

# List dashboard roles - shared accounts [/api/v2/dashboards/{dashboard_role}/accounts]

    List all accounts that have shared application on the dashboard.

- Parameters
    - dashboard_role: 551 (number) - ID of the Dashboard role

### Retrieve dashboard accounts [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)

    - Attributes (object)
        - accounts (array[string])
        - meta (Paging)

# List all Applications on Dashboard [/api/v2/dashboards/{dashboard_role}/applications]

    Return all dashboard applications.

- Parameters
    - dashboard_role: 551 (number) - ID of the Dashboard role

### Retrieve dashboard applications [GET]

- Request
    - Headers

            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - applications (array[string])
        - meta (Paging)

# List of Application instances on dashboard [/api/v2/dashboards/{dashboard_role}/icons]

    Returns all available application instances (icons) of the specific dashboard role.

- Parameters
    - dashboard_role: 551 (number) - ID of the Dashboard role

### Retrieve icons [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - icons (array[string])
        - meta (Paging)

### Create application instance [POST]
    
    This call will also fire Modify application instance claims [PATCH] if you add username, password or note.
    
- Request
    - Attributes (Add app)
    - Headers
    
            Authorization: token {{TOKEN}}
 
- Response 200 (application/json)
    - Attributes
        - icon (Application Icon Model)

# Dashboard Application [/api/v2/dashboards/{dashboard_id}/icons/{icon_id}/application]

- Parameters
    - dashboard_id: 551 (number) - ID of the Dashboard in the form of an integer
    - icon_id: 247155 (number) - ID of the Icon in the form of an integer

### Modify application instance claims [PATCH]
- Request
    - Attributes (Setup app claims)
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - icon (Application Icon Model)


# Dashboard Application instance [/api/v2/dashboards/{dashboard_id}/icons/{icon_id}]

    Return and update application instance for the current dashboard user.

- Parameters
    - dashboard_id: 551 (number) - ID of the Dashboard in the form of an integer
    - icon_id: 247155 (number) - ID of the Icon in the form of an integer

### Retrieve application instance [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - icon (Application Icon Model)

### Modify application instance claims [PATCH]
- Request
    - Attributes (Setup claims)
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - icon (Application Icon Model)

### Remove application instance from the dashboard [DELETE] 

    This call will also log the user changes for the Application.
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - response (object)
            - message (string)
            - code (number)
        - meta (object)
            - icons (string) - List all dashboard role application instances

# My Account [/api/v2/me]

Return AppsCo user account information.
       
### Retrive user account information [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - account (AppsCo Identity Model)
        
### Update account [PUT]
- Request
    - Attributes (Setup me)        
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - account (AppsCo Identity Model)

# Account Profile Image [/api/v2/me/profile-image]

    Return profile image of currently logged in user.
        
### Setup account profile image [POST]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - account (AppsCo Identity Model)

# Account Partner [/api/v2/me/partner]

    Information regarding AppsCo Partner.

        
### Retrieve partner information [GET]

- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes (Partner Model)
        - account (Me)

# Transfer Token [/api/v2/me/transfer-token]

    Transfer token is used to add partner to your profile.

### Retrieve transfer token [GET]

- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - `transfer_token`
        - expiration (DateTime Model)

# Account Application instances [/api/v2/me/icons]

    Returns AppsCo account application instances of currently logged in user, regardles of the dashboard.
        
### Retrieve all application instances [GET]

- Request
    - Headers
    
            Authorization: Token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - icons (array[string])
        - meta (Paging)

# Account Application instance [/api/v2/me/icons/{applicationIcon}]

    Returns AppsCo account application instance of currently logged in user.

- Parameters
    - applicationIcon: 247155 (number) - ID of the Application Icon in the form of an integer
       
### Retrieve application instance [GET]

- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - icon (Application Icon Model)

# My Account's Applications [/api/v2/me/applications]

    Returns AppsCo account applications of currently logged in user.

### Retrieve applications of my account [GET]

- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - applications (array[string])
        - meta (Paging)

# Account Application [/api/v2/me/applications/{application}]

    Returns AppsCo account application of currently logged in user.

- Parameters
    - application: 2512 (number) - ID of the Application in the form of an integer
        
### Retrieve specific application's information [GET]

- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes (Account Application Model)        
     
# Account Two-Factor Authentication [/api/v2/me/2fa]

    Is two-factor authentication turned on or off.
      
### Two-factor authentication status [GET]

- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - enabled (boolean)
        
### Setup two factor authentication [POST]
- Attributes
    - googleAuthenticatorSecret: SKDSSBRQR2VXCCVK (string) - Goolge authenticator secret key
    - key: 348271 (number) - Two factor authentication key
    
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - enabled: true (boolean)   

### Turn off two factor authentication [DELETE]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - enabled: true (boolean)      

# Two-factor Authentication recovery codes [/api/v2/me/2fa/codes]

    Returns AppsCo account two factor authentication recovery codes of currently logged in user
        
### Retrieve two-factor recovery codes [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes (array[number])

# Change Password [/api/v2/me/change-password]

    AppsCo account change password of currently logged in user.
        
### Setup new password for my account [POST]
- Attributes (Setup password)
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - enabled (boolean)
        
# Account's Authorized Apps [/api/v2/me/authorized-apps]

    Return AppsCo account two-factor authorized applications of currently logged in user.
 
### Retrieve authorization's information [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - authorizations (array[Authorized Apps Model])
        - meta (Paging)
        
# Me Authorized Apps ID [/api/v2/me/authorized-apps/{oauthApp}]

    Delete AppsCo account oauth application of currently logged in user.

- Parameters
    - oauthApp (number) - ID of the Authorized application in the form of an integer
        
### Remove authorization of application  [DELETE]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - success: true (boolean)

# Account Logs [/api/v2/me/log]

    Return account logs of currently logged in user.
        
### Retrieve logs [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - log (array[Log Model])
        - meta (Paging)
        
# Template Applications [/api/v2/applications]

    Return all available template applications.
        
### Retrieve all template applications [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - applications (array[string])
        - meta (Paging)

# Single Application [/api/v2/application/{application}]

    Return Appsco application information on the user's dashboard. 

- Parameters
    - application: 2 (number) - ID of the Application in the form of an integer

### Retrieve all information about application [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - application (Application)

### Remove single application from dashboard [DELETE]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - response (Response App Model)
        - meta (Meta Icons)
        

# Switch Application [/api/v2/application/{application}/switch]

    Change AppsCo application login type. 
    
- Parameters
    - application: 2 (number) - ID of the Application in the form of an integer
    
        
### Switch application login type [POST]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - response (Response App Model)

# Application's Log [/api/v2/application/{application}/log]

    Return AppsCo application logs. 
    
- Parameters
    - application: 2 (number) - ID of the Application in the form of an integer
       
### Retrieve logs for application [GET] 
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - log (array[Log Model])
        - meta (Paging)
        
# Application's Subscribers [/api/v2/application/{application}/subscribers]
    
    Return AppsCo application subscribers for a currently loged user.
    
- Parameters
    - application: 2 (number) - ID of the Application in the form of an integer
       
### Retrieve subscribers for application [GET] 
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - accounts (array[string])
        - meta (Paging)

### Delete specific subscriber [DELETE]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - response (Response App Model)

# Notifications [/api/v2/notifications]

    Return AppsCo notifications for a currently loged in user. 
    
### Retrieve notifications [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes (array[Notifications Model])

# Accounts [/api/v2/accounts]

   Return AppsCo accounts. 
   
### Retrieve accounts [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - accounts (array[string])
        - meta (Paging)

# Account [/api/v2/accounts/{account_id}]

    Return AppsCo account information. 

- Parameters
    - account_id: 41 (number) - ID of the Account in the form of an integer

### Retrieve account [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - account (AppsCo Identity Model)

        
# Share Accounts [/api/v2/applications/{account_id}/share]

  Share AppsCo account. 

- Parameters
    - account_id: 41 (number) - ID of the Application in the form of an integer  
       
### Share application instance [POST] 
- Attributes
    - icon (string) - Dashboard's icon that you want to share
    
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - response (Response App Model)

    
# Vault Items [/api/v2/vault]

  Return AppsCo vault items of currently loged in user.

### Retrieve vault items [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - items (array[string])
        - meta (Paging)

### Create new vault item [POST]
- Request
    - Attributes (Setup vault login)
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes (Login)
        
# Vault Item [/api/v2/vault/{vault_id}]

  Return Appsco specific vault item.   
  
- Parameters
    - vault_id: 127 (number) - ID of the Vault Login in the form of an integer

### Retrieve vault item [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - item (Login)
    
### Update vault item [PATCH]
- Request
    - Attributes (Setup vault login)   
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - item (Login)       
     
### Remove single vault item [DELETE]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - response (Response App Model)

# Vault Credit Cards [/api/v2/vault-cc]

  Return AppsCo vault credit cards.

### Retrieve credit cards [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - items (array[string])
        - meta (Paging)

### Add credit card [POST] 
- Request
    - Attributes (Setup Credit Card)
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - item (Credit Card)   


# Vault Credit Card [/api/v2/vault-cc/{cc_id}]

  Return AppsCo specific credi card. 

- Parameters
    - cc_id: 36 (number) - ID of the Vault Credit Card in the form of an integer

### Retrieve credit card [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - item (Credit Card)
       
### Update credit card [PATCH] 
- Request
    - Attributes (Setup Credit Card)
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - item (Credit Card) 
    
### Remove credit card [DELETE]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - response (Response App Model)

# Vault Identities [/api/v2/vault-identity]

  Return AppsCo vault identities. 

### Retrieve vault identities [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - items (array[string])
        - meta (Paging)

### Create new identitiy [POST]
- Request
    - Attributes (Setup Identity)
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - item (Identity)

# Vault Identity [/api/v2/vault-identity/{identity_id}]

  Return AppsCo vault identity. 

- Parameters
    - identity_id: 48 (number) - ID of the Vault Identity in the form of an integer

### Retrieve identity [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - item (Identity)        
        
### Update identity [PATCH]
- Request
    - Attributes (Setup Identity)
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - item (Identity)

### Remove identity [DELETE]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - response (Response App Model)


# Vault Passports [/api/v2/vault-passport]

  Return AppsCo vault passports.

### Retrieve passports [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - items (array[string])
        - meta (Paging)

### Add a new passport [POST] 
- Request
    - Attributes (Setup Passport)
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - item (Passport)

# Vault Passport [/api/v2/vault-passport/{passport_id}]

  Return AppsCo specific vault passport. 

- Parameters
    - passport_id: 28 (number) - ID of the Vault Passport in the form of an integer

### Retrieve passport [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - item (Passport)

### Update passport [PATCH]
- Request
    - Attributes (Setup Passport)
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - item (Passport)

### Remove passport [DELETE]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - response (Response App Model)


# Vault Security Notes [/api/v2/vault-secure-note]

  Return AppsCo vault security notes. 

### Retrieve security notes [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - items (array[string])
        - meta (Paging)

### Create security note [POST]
- Request
    - Attributes (Setup Secure Note)
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - item (Secure Note)

# Vault Secure Note [/api/v2/vault-secure-note/{note_id}]

  Return Appsco security note. 

- Parameters
    - note_id: 23 (number) - ID of the Vault Secure Note in the form of an integer

## Retrieve security note [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - item (Secure Note)

### Update security note [PATCH] 
- Request
    - Attributes (Setup Secure Note)
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - item (Secure Note)

### Remove security note [DELETE]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - response (Response App Model)
    

# Vault Software Licences [/api/v2/vault-software-licence]

  Return AppsCo vault software licences. 

### Retrieve software licences [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - items (array[string])
        - meta (Paging)
        
### Add software licence [POST]
- Request
    - Attributes (Setup Software Licence)
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - item (Software Licence)


# Vault Software Licence [/api/v2/vault-software-licence/{licence_id}]

  Return AppsCo specific software licence. 

- Parameters
    - licence_id: 12 (number) - ID of the Vault Secure Note in the form of an integer

### Retrieve software licence [GET]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes 
        - item (Software Licence)

### Update software licence [PATCH]
- Request
    - Attributes (Setup Software Licence)
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - item (Software Licence)

### Remove software licence [DELETE]
- Request
    - Headers
    
            Authorization: token {{TOKEN}}

- Response 200 (application/json)
    - Attributes
        - response (Response App Model)




# Data Structures

## Code (object)
- code: 404oookk4ooccgsws2pxjq4rkeccg0co0wsk8 (string) - That is base64 of `client_id` and `client_secret`

## Token (object)
- token: 7hw0fqyydegws8sg40s40wgco04sgoog404oookk4ooccgsws2pxjq4rkeccg0co0wsk8skccoccsg00cwocwwc80skss04kkwc - Requested user's token

## Dashboard Model (object)

- role_id (number) - Dashboard Role id
- alias (number) - Dashboard Role alias
- title (string) - Dashboard Name
- roles (Dashboard Roles, fixed-type)
- `default_dashboard` (boolean) - Is this dashboard your default dashboard
- logo (string) - Dashboard Logo
- self (string) - Resource location

## Dashboard Roles (object)
- OWNER (string)
- ADMIN (string)
- SHARED (string)

## Dashboard Meta (object)
- icons (object)
    - icons (array, fixed-type)
        - (string)
    - count (number) - Number of icons
    - self (string) - Application instances resource
- accounts (string) - Dashboard roles that belong to dashboard
- applications (string) - Dashboard applications

## Application Icon Model (object)
- application (string) - Resource location of the application template
- alias (number) - Application icon alias
- title (string) - Application title
- `auth_type` (string) - Authentication type
- `is_configured` (boolean) - Is Application icon configured
- `url_editable` (boolean) - Can you edit application icon uri
- `icon_url` (string) - Application icon
- url (string ) - Application url
- images (array[string]) - List of application icons
- owner (boolean) - Do you own this application?
- self (string) - Resource location to it self
- security (object) - Application icon security based on policies
    - `password_strength` (number) - How strong is the password from 0 to 100
    - info (object) - Additional info
        - `upper_case` (boolean) - Does it contain upper case letters
        - `lower_case` (boolean) - Does it contain lower case letters
        - digits (boolean) - Does it contain digits
        - `special_chars` (boolean) - Does it contain special characters
        - length8 (boolean) - Is length greater then 8 characters
        - length16 (boolean) - Is length greater then 16 characters
        - entropy (number) - What is the entropy
              },
    - last_update (string) - When is it last updated
    - score (number) - Overall score
- claims (object) - Claims based on auth type
    - username (string) - User's username for application
    - password (string) - User's password for application
    - note (string) - User's note for application
- meta (object)
    - log (string) - Log of all the actions on application
    - autologin (string) - Switch authentication types between form fill and autologin
    - subscribers (string) - Accounts that this application is shared to
    - `application-remove` (string) - Remove application
    - `plugin_go` (string) - Attempt login

## Setup password (object)
- change_password[oldPassword] (string) - Old password
- change_password[newPassword][plainPassword][first] (string) - New password first type
- change_password[newPassword][plainPassword][second] (string) - New password second type


## Add app (object)
- application[resource] (string, required) - Application route

## Setup claims (object)
- icon_claims[username] (string) - User's username for application
- icon_claims[password] (string) - User's password for application
- icon_claims[note] (string) - User's note for application

## Setup app claims (object)
- configure_application[title] (string) - Application title 
- configure_application[url] (string) - Application url

## Software Licence (object)
- name - Name of software licence
- licence - Name of licence
- licenceKey - Key of licence
- numberOfLicences (number) - Number of purchased licences
- orderNumber - Number of order
- orderTotal (number) - Total of orders
- price - Price of order
- publisher - Name of publisher
- purchaseDate - Date of purchased order
- supportEmail - Email of support
- version - Version of software
- website - Website

## Setup Software Licence (object)
- vault_software_license[name] (string, required) - Software licence name
- vault_software_license[licenceKey] - Software licence key
- vault_software_license[licence] - Software licence number
- vault_software_license[version] - Software licence version
- vault_software_license[publisher] - Publisher of software licence
- vault_software_license[supportEmail] - Software licence support email 
- vault_software_license[website] - Software licence website
- vault_software_license[price] - Software licence price
- vault_software_license[orderNumber] - Software licence number of orders
- vault_software_license[numberOfLicences] - Software number of licence
- vault_software_license[orderTotal] - Total order of licence
- vault_software_license[note] - Note text
- `vault_software_license[purchaseDate][day]` - Purchased day of software licence
- `vault_software_license[purchaseDate][month]` - Purchased month of software licence
- `vault_software_license[purchaseDate][year]` - Purchased year of software licence

## Secure Note (object)
- title - Title of secure note
- note - Text of note

## Setup Secure Note (object)
- vault_secure_note[title] (string, required) - Note title
- vault_secure_note[note] - Note text

## Passport (object)
- name - Name in passport
- sex (array) - Gender
- country - Country in passport
- dateOfBirth - Date of birth
- expirationDate - Date of passport expiration
- issuedDate - Date when passport was issued
- issuingAuthority - Authority that issued the passport
- nationality - Nationality of person in passport
- number - Number of passport
- note - Text of note

## Setup Passport (object)
- vault_passport[name] (string, required) - Name of passport vault
- vault_passport[number] (number) - Passport number
- vault_passport[nationality] - Passport nationality
- vault_passport[issuingAuthority] - Passport issuing authority
- vault_passport[note] - Note
- vault_passport[country] - Country
- vault_passport[sex] - Gender
- `vault_passport[dateOfBirth][day]` - Day of birth
- `vault_passport[dateOfBirth][month]` - Month of birth
- `vault_passport[dateOfBirth][year]` - Year of birth
- `vault_passport[issuedDate][day]` - Passport issued day
- `vault_passport[issuedDate][month]` - Passport issued month
- `vault_passport[issuedDate][year]` - Passport issued year
- `vault_passport[expirationDate][day]` - Passport expiration day
- `vault_passport[expirationDate][month]` - Passport expiration month
- `vault_passport[expirationDate][year]` - Passport expiration year

## Identity (object)
- name - Name
- firstName - First name
- lastName - Last name
- birthDate - Date of birth
- sex (array) - Gender, male (m) or female (f)
- email - Email
- company - Name of company
- department - Department of company
- jobTitle - Job title in company
- cell - Cell phone number
- phoneBusiness - Company phone number
- phoneHome - Home phone number
- website - Website address
- note - Text of note

## Setup Identity (object)
- vault_identities[name] (string, required) - Identity name
- vault_identities[firstName] (string, required) - First name
- vault_identities[lastName] (string, required) - Last name
- vault_identities[sex] - Gender
- vault_identities[cell] - Cell phone number
- vault_identities[email] - Email address
- vault_identities[company] - Company name
- vault_identities[jobTitle] - Job title
- vault_identities[department] - Department 
- vault_identities[phoneHome] - Home phone number
- vault_identities[phoneBusiness] - Business phone number
- vault_identities[website] - Business website
- vault_identities[note] - Note

## Credit Card (object)
- title (required, string) - Title
- cardHolder - Card holder
- type (array) - Type of credit card
- cardNumber - Card number
- expiryDate - Date when the credit card expire
- validFrom - Date the credit card is valid from
- note - Text of note

## Setup Credit Card (object)
- vault_cc[title] (string, required)- Title
- vault_cc[cardHolder] - Name on credit card
- vault_cc[cardNumber] (number, required) - Has to be valid card number 
- vault_cc[verificationNumber] (number, required) - Has to be valid verification number
- vault_cc[note] - Note
- vault_cc[type] (number) - Type of credit card
- `vault_cc[expiryDate][day]` (number)- Expiry day on credit card
- `vault_cc[expiryDate][month]` (number) - Expiry month on credit card
- `vault_cc[expiryDate][year]` (number) - Expiry year on credit card
- `vault_cc[validFrom][day]` (number) - Until valid day on credit card
- `vault_cc[validFrom][month]` (number) - Until valid mont on credit card
- `vault_cc[validFrom][year]` (number) - Until valid year on credit card

## Login (object)
- name - Name of login
- username - Login username
- password - Login password
- url - Login url
- note - Text of note

## Setup vault login (object)
- vault_login[name] (string) - Vault item name
- vault_login[url] (string) - Vault item url
- vault_login[username] (string) - Vault item username
- vault_login[password] (string) - Vault item password
- vault_login[note] (string) - Vault item note

## Application (object)
- id (number) - Id of application
- title - Name of application
- url - Url of application
- url_editable (boolean) - If url of applications is editable
- icon_url - Url of application's icon
- auth_types (array) - Application authorization type

## Me (object)
- id (number) - Owner's ID
- email - Emaile of account's owner
- first_name - First name of account's owner
- last_name - Last name of account's owner
- timezone - Available timezones 
- gender (array) - Gender
- country (array) - Available countries 
- phone - Phone number of account's owner
- picture_url - Picture url of account's owner

## Setup me (object)
- profile[first_name] (string) - User's first name
- profile[last_name] (string) - User's last name
- profile[timezone] (string) - Timezone
- profile[country] (string) - User's country
- profile[phone] (string) - User's phone number
- profile[gender] (string) - User's gender male/female

## Company Model (object)
- name (string) - Company Name
- `contact_email` (string) - Contact email
- domain (string) - Company domain
- `intranet_website` (string) - Company internal website on mosaic
- `remaining_trial_period` (number) - Remaining trial period for AppsCo Business package
- `trial_period` (number) - How big is the trial period
- image (string) - Company logo
- self - Company self resource
- meta (object)
    - applications - Company applications
    - settings - Company settings
    - logo - Create Company logo

## AppsCo Identity Model (object)
- id (number) - Id of the identity
- `dashboard_roles` (object) - List of dashboard roles
- email
- timezone
- country
- `created_at` (DateTime Model)
- name - Concat First name and Last name, if not present then email
- enabled (boolean)
- `first_name`
- `last_name`
- gender
- `last_login` (DateTime Model)
- locale
- phone
- `picture_url`
- username
- roles (array[string])
- `display_name`
- `org_units` (array)
- company (Company Model)
- meta (object)
    - share - Resource link for sharing application to account
- self

## Account Application Model (object)

- application - Application route
- title - Application name
- auth_types: unpw (array) - Application authorization type
  - none
  - item
- url_editable (boolean)
- application_url - Application icon
- url - Application url
- images (array[string])

## Partner Model (object)
- address (string) - Partner address
- company_name (string) - Partner name
- company_number (string) - Partner phone 
- contact_email (string) - Parner email
- company_logo (string) - Partner logo 
 
## Authorized Apps Model (object)
- created (DateTime Model) - Date when application was created
- scopes 
- title - Application title
- description - Application description
- icon_url - Icon url of application 
- active (boolean) - If application is active
- website - Application website
- revoke - Application revoke route

## Log Model (object)
- account (Log Account Model)
- created_at (Log DateTime Model) - Date time when account was created
- ip - IP address
- `user_agent` - Information about the browser and operating system
- type
- data (array)

## Log Account Model (object)
- `display_name` - User's name
- email - User's email 
- image - User's image route

## Log DateTime Model (object)
- date - Date time in iso
- `timezone_type` - Timezone type
- timezone - Name of timezone


## Response App Model (object)
- message
- code (number) - Response code
          
## Meta Icons (object)
- icons - Application icon route

## Notifications Model (object)
- id (number)
- body - Notification look
- imageUrl - Notification image url
- createdAt - Notification created time


## Paging (object)
- total (number) - Total number of items 
- page (number) - Current page
- first (string) - First page in collection
- last (string) - Last page in collection
- pages (number) - Number of pages
- per_page (number) - Number of items per page 
- prev (string) - Previous page
- next (string) - Next page

## DateTime Model (object)
- date - Date time in iso
- `timezone_type` (number)
- `timezone` (string)

## Error Response 403 (object)
- error: access denied (string)
- message: Access Denied (string)
- code: 403 (number)

## Error Response 401 (object)
- error: unauthorized (string)
- message: please authenticate with your token (string)
- code: 401 (number)

## Error Response 422 (object)
- error: Unprocessable Entity (string)
- message: "" (string)
- code: 422 (number)