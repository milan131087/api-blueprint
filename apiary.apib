git FORMAT: 1A
HOST: https://appsco.com/

# AppsCo

AppsCo helps you securely manage all your private applications access and digital confidential information from any device.

## How to use AppsCo api
    
Appsco API supports [OAuth protocol](https://oauth.net/2/).
OAuth Request code in order to retrieve token for loggedin user.
Use client id and scope in order to request equivalent token.
Redirect uri can be used for redirect response.
System will return code which you can later use to retrieve access_token.
    

# Dashboard
    
Dashboard represents holder for application instances. Its content will be presented to user.
User can have only one dashboard, but many dashboards can be shared to user.
Sharing a dashboard is creating specific role for that user. This role is used to log all user interactions
in the system.

# Account

Account in AppsCo represents user identity. Identity can be used to interact with other software.
All actions that are preformed by the identity or in the name of the identity are loggeed in the system.

# Application Template

Applicaiton Template represents import from application catalog list.
These applications are used by user in order to setup application credentials.
AppsCo uses them in order to perform login.
Application catalog is a separate system that AppsCo uses in order to provide as many applications as possible to the user.
This list also holds methods of authentication.
Supported authentication methods
- Form Fill
- Auto Login
- SAML
- JWT

# Application

Application is an instance of application template and is further used for configuring credentials.
Application is used to store all user interactions with the resource credentials, login user, share credentials with other users.
Shared Application represents instance of application that is assigned to the user. 


# Application instance (Application Icon)

Application instance represents instance of application and it is unique for the user.
Each interaction with application icon is logged in the application it self.
If application is removed all coresponding application icons will be also removed.


# AppsCo Log

* Create Resource
* Resource Claims Update
* Resource Update
* Resource remove from org unit
* Resource removed
* Resource icon removed
* Resource shared
* Resource icon claims updated
* Subscription update
* Cancel subscription
* Send invoice to email
* Create credit card - change payment method
* Remove company role
* Promote company role to admin
* Remove admin role from company member
* Company admin updated company memeber
* Company admin changed company memeber password
* Company member added
* Company members imported from csv
* Company member removed from orgunit
* Organization unit create
* Update organization unit
* Remove organization unit
* Add resource to organization unit
* Add account to organization unit
* Company settings updated
* Company logo changed
* Account attemted login
* Account updated profile
* Account updated profile image
* Account generated partner token
* Account enabled 2fa
* Account disabled 2fa
* Account chnaged password
* Account authorized application
* Account revoked application authorization

# Company OrgUnits

  Company represents something to write...

# OrgUnit - Resource - Account policy

  OrgUnit is something something


# Request Token [/api/v2/request-token]

In order to retrieve token user should first perform OAuth request which will provide code.
Code is used after that to retrieve token.
To retrieve token use code and basic authentication using your app credentials (`client_id`, `client_secret`).

### Exchange code and resource credentials for token [POST]

+ Request
    + Attributes (object)
        + code: 404oookk4ooccgsws2pxjq4rkeccg0co0wsk8 (string)
    + Headers
    
                Authorization: Basic base64
                    
+ Response  200 (application/json)

    + Attributes (Token)

# Explore Api [/api/v2]

This link can be used to retrieve list of all available resources.
In order to access this list user first need to authenticate.

## Retrieve api resources [GET]

+ Request
    + Headers

            Authorization: token absdef12345


+ Response  200 (applicaiton/json)

        {
          "versions": {
            "v2": {
              "dashboards": "https://www.appsco.com/api/v2/dashboards",
              "me": "https://www.appsco.com/api/v2/me",
              "application": "https://www.appsco.com/api/v2/applications",
              "notifications": "https://www.appsco.com/api/v2/notifications",
              "accounts": "https://www.appsco.com/api/v2/accounts",
              "devices": "https://www.appsco.com/api/v2/devices",
              "vault-cc": "https://www.appsco.com/api/v2/vault-cc",
              "vault-identity": "https://www.appsco.com/api/v2/vault-identity",
              "vault-login": "https://www.appsco.com/api/v2/vault",
              "vault-passport": "https://www.appsco.com/api/v2/vault-passport",
              "vault-secure-note": "https://www.appsco.com/api/v2/vault-secure-note",
              "vault-software-licence": "https://www.appsco.com/api/v2/vault-software-licence"
            }
          }
        }

# Dashboards [/api/v2/dashboards]

List all dashboards that user has right to access.

### Retrieve Dashboards [GET]

+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)

    + Attributes
        + dashboards (array[string])
        + meta (Paging)

# Dashboard [/api/v2/dashboards/{dashboardRole}]

Returns dashboard details.

+ Attributes (Dashboard Model)

### Retrieve Dashboard [GET]
+ Parameters
    + dashboardRole: 551 (number) - ID of the Dashboard Role
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + dashboard (Dashboard Model)
        + meta (Dashboard Meta)

# List dashboard roles - shared accounts [/api/v2/dashboards/{dashboardRole}/accounts]

List all accounts that have shared application on the dashboard.

### Retrieve dashboard accounts [GET]
+ Parameters
    + dashboardRole: 551 (number) - ID of the Dashboard Role
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)

    + Attributes (object)
        + accounts (array[string])
        + meta (Paging)

# List all Resources on Dashboard [/api/v2/dashboards/{dashboardRole}/applications]

Return all dashboard resources.

### Retrieve dashboard resources [GET]
+ Parameters
    + dashboardRole: 551 (number) - ID of the Dashboard Role
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + applications (array[string])
        + meta (Paging)

# List of Resource instances on dashboard [/api/v2/dashboards/{dashboardRole}/icons]

Returns all available resource instances (icons) of the specific dashboard role.

### Retrieve icons [GET]
+ Parameters
    + dashboardRole: 551 (number) - ID of the Dashboard Role
+ Request
    + Parameters
      + dashboard
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + icons (array[string])
        + meta (Paging)

### Create resource instance [POST]

This call will also fire Modify resource instance claims [PATCH] if you add username, password or note.

+ Parameters
    + dashboardRole: 551 (number) - ID of the Dashboard Role
+ Request
    + Attributes (Add app)
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + icon (Application Icon Model)

# Dashboard Resource [/api/v2/dashboards/{dashboard}/icons/{icon}/application]

### Modify resource instance claims [PATCH]
+ Parameters
    + dashboard: 551 (number) - ID of the Dashboard in the form of an integer
    + icon: 247155 (number) - ID of the Icon in the form of an integer
+ Request
    + Attributes (Setup app claims)
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + icon (Application Icon Model)

# Resource Instances [/api/v2/dashboards/{dashboard}/icons]

Return and update resource instance for the current dashboard user.


### Retrieve resource instances [GET]
+ Parameters
    + dashboard: 551 (number) - ID of the Dashboard in the form of an integer
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + icons (array[string])
        + meta (Paging)

# Resource Instance [/api/v2/dashboards/{dashboard}/icons/{icon}]

    Return and update resource instance for the current dashboard user.

### Retrieve resource instance [GET]
+ Parameters
    + dashboard: 551 (number) - ID of the Dashboard in the form of an integer
    + icon: 247155 (number) - ID of the Icon in the form of an integer
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + icon (Application Icon Model)

### Modify resource instance claims [PATCH]
+ Parameters
    + dashboard: 551 (number) - ID of the Dashboard in the form of an integer
    + icon: 247155 (number) - ID of the Icon in the form of an integer
+ Request
    + Attributes (Setup claims)
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + icon (Application Icon Model)

### Remove resource instance from the dashboard [DELETE]

This call will also log the user changes for the Resource.

+ Parameters
    + dashboard: 551 (number) - ID of the Dashboard in the form of an integer
    + icon: 247155 (number) - ID of the Icon in the form of an integer
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + Response  (object)
            + message (string)
            + code (number)
        + meta (object)
            + icons (string) - List all dashboard role resource instances

# My Account [/api/v2/me]

Return AppsCo user account information.

### Retrive user account information [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + account (AppsCo Identity Model)

### Update account [PUT]
+ Request
    + Attributes  (Setup me)
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + account (AppsCo Identity Model)

# Account Profile Image [/api/v2/me/profile-image]

Return profile image of currently logged in user.

### Setup account profile image [POST]
+ Attributes
    + file - The image file

+ Request (multipart/form-data)
    + Headers

            Authorization: token absdef12345

    + Body

            -----BOUNDARY
                Content-Disposition: form-data; name="file"; filename="image.jpg"
                Content-Type: image/jpeg
            -----BOUNDARY

+ Response  200 (application/json)
    + Attributes  (array[])

# Account Partner [/api/v2/me/partner]

Information regarding AppsCo Partner.


### Retrieve partner information [GET]

+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes  (Partner Model)
        + account (Me)

# Transfer Token [/api/v2/me/transfer-token]

    Transfer token is used to add partner to your profile.

### Retrieve transfer token [GET]

+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + `transfer_token`
        + expiration (DateTime Model)

# Account Application instances [/api/v2/me/icons]

Returns AppsCo account application instances of currently logged in user, regardles of the dashboard.

### Retrieve all application instances/icons [GET]

+ Request
    + Headers

            Authorization: Token absdef12345

+ Response  200 (application/json)
    + Attributes
        + icons (array[string])
        + meta (Paging)
        
# Resource Instances Personal [/api/v2/me/icons/personal]

Returns AppsCo account resource personal instances/icons currently logged in user

### Retrieve personal resource instances/icons [GET]

+ Request
    + Headers

            Authorization: Token absdef12345

+ Response  200 (application/json)
    + Attributes
        + icons (array[string])
        + meta (Paging)


# Resource Instances Shared With Me [/api/v2/me/icons/shared-with-me]

Returns AppsCo account resource instances shared with company

### Retrieve all resource instances/icons [GET]

+ Request
    + Headers

            Authorization: Token absdef12345

+ Response  200 (application/json)
    + Attributes
        + icons (array[string])
        + meta (Paging)


# Resource Instances Shared With Me Company [/api/v2/me/icons/shared-with-me-company/{company}]

Returns AppsCo account resource instances shared with currently logged in user, regardles of the dashboard.

+ Parameters
    + company (number) - ID of the company in the form of an integer


### Retrieve resource instances/icons shared with company [GET]

+ Request
    + Headers

            Authorization: Token absdef12345

+ Response  200 (application/json)
    + Attributes
        + icons (array[string])
        + meta (Paging)


# Account Resource instance [/api/v2/me/icons/{applicationIcon}]

Returns AppsCo account resource instance of currently logged in user.

### Retrieve resource instance [GET]
+ Parameters
    + applicationIcon: 247155 (number) - ID of the Resource Icon in the form of an integer
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + icon (Application Icon Model)

# My Account's Resources [/api/v2/me/applications]

Returns AppsCo account resources of currently logged in user.

### Retrieve resources of my account [GET]

+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + applications (array[string])
        + meta (Paging)

# Account Resource [/api/v2/me/applications/{applicationIcon}]

Returns AppsCo account resource of currently logged in user.

### Retrieve specific resource's information [GET]
+ Parameters
    + applicationIcon: 247155 (number) - ID of the Resource Icon in the form of an integer
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes  (Account Application Model)

# Account Two-Factor Authentication [/api/v2/me/2fa]

Is two-factor authentication turned on or off.

### Two-factor authentication status [GET]

+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + enabled (boolean)

### Setup two factor authentication [POST]
+ Attributes
    + googleAuthenticatorSecret: SKDSSBRQR2VXCCVK (string) - Goolge authenticator secret key
    + key: 348271 (number) - Two factor authentication key

+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + enabled: true (boolean)

### Turn off two factor authentication [DELETE]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + enabled: true (boolean)

# Two-factor Authentication recovery codes [/api/v2/me/2fa/codes]

Returns AppsCo account two factor authentication recovery codes of currently logged in user

### Retrieve two-factor recovery codes [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes  (array[number])

# Change Password [/api/v2/me/change-password]

AppsCo account change password of currently logged in user.

### Setup new password for my account [POST]
+ Attributes  (Setup password)
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + enabled (boolean)

# Account's Authorized Apps [/api/v2/me/authorized-apps]

Return AppsCo account two-factor authorized applications of currently logged in user.

### Retrieve authorization's information [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + authorizations (array[Authorized Apps Model])
        + meta (Paging)

# Me Authorized Apps ID [/api/v2/me/authorized-apps/{oauthApp}]

Delete AppsCo account oauth application of currently logged in user.

+ Parameters
    + oauthApp (number) - ID of the Authorized application in the form of an integer

### Remove authorization of application  [DELETE]

+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + success: true (boolean)

# Account Logs [/api/v2/me/log]

Return account logs of currently logged in user.

### Retrieve logs [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + log (array[Log Model])
        + meta (Paging)

# Template Resources [/api/v2/applications]

Return all available template resources.

### Retrieve all template resources [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + applications (array[string])
        + meta (Paging)

# Single Resource [/api/v2/applications/{application}]

Return Appsco resource information on the user's dashboard.

### Retrieve all information about resource [GET]
+ Parameters
    + application: 2 (number) - ID of the Resource in the form of an integer
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + application (Application)

### Remove single resource from dashboard [DELETE]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + Response (Response App Model)
        + meta (Meta Icons)


# Switch Resource [/api/v2/applications/{application}/switch]

Change AppsCo resource login type.

### Switch resource login type [POST]
+ Parameters
    + application: 2 (number) - ID of the Resource in the form of an integer
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + Response (Response App Model)

# Resource's Log [/api/v2/applications/{application}/log]

Return AppsCo resource logs.

### Retrieve logs for resource [GET]
+ Parameters
    + application: 2 (number) - ID of the Resource in the form of an integer
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + log (array[Log Model])
        + meta (Paging)

# Resource's Subscribers [/api/v2/applications/{application}/subscribers]

Return AppsCo resource subscribers for a currently loged user.

### Retrieve subscribers for resource [GET]
+ Parameters
    + application: 2 (number) - ID of the Resource in the form of an integer
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + accounts (array[string])
        + meta (Paging)

### Delete specific subscriber [DELETE]
+ Parameters
    + application: 2 (number) - ID of the Resource in the form of an integer
+ Request
    + Attributes
        + account: https://appsco.com/api/v2/accounts/10 (string) - Subscriber's account
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + Response (Response App Model)

# Resource's Track Events [/api/v2/applications/{application}/track-events]

 AppsCo resource track events for a currently loged user.

### Retrieve resource track event [GET]
+ Request
    + Attributes (Setup Track Events)
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes (Response App Model)
        

# Notifications [/api/v2/notifications]

Return AppsCo notifications for a currently loged in user.

### Retrieve notifications [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes  (array[Notifications Model])

# Accounts [/api/v2/accounts]

   Return AppsCo accounts.

### Retrieve accounts [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + accounts (array[string])
        + meta (Paging)

# Account [/api/v2/accounts/{accountId}]

Return AppsCo account information.

### Retrieve account [GET]
+ Parameters
    + accountId: 41 (number) - ID of the Account in the form of an integer
+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + account (AppsCo Identity Model)


# Share Accounts [/api/v2/accounts/{accountId}/share]

Share AppsCo account.

### Share account instance [POST]
+ Parameters
    + accountId: 41 (number) - ID of the Account in the form of an integer
+ Attributes
    + icon: https://appsco.com/api/v2/dashboards/551/icons/247155 (string) - Dashboard's icon that you want to share

+ Request
    + Headers

            Authorization: token absdef12345

+ Response  200 (application/json)
    + Attributes
        + Response (Response App Model)


# Companies  [/api/v2/companies]

    Return AppsCo companies for current user.

### Retrieve companies  [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes
        + companies (array[string])
        + meta (Paging)
        

# Create Company  [/api/v2/company]

    Create AppsCo Company for current user.

### Create company  [POST]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes
        + account (Create Company Response)


# Company [/api/v2/companies/{company_id}]

    Return AppsCo Company information for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer


### Retrieve company  [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company)


# Company Resources [/api/v2/companies/{company_id}/applications]

    Return AppsCo Company information for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer


### Retrieve company resources  [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes
        + applications (array[string])
        + meta (Paging)

### Add company resource to organization unit [POST]
+ Request
    + Attributes (Setup App to OrgUnit)
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company Application)
    



# Company OrgUnits [/api/v2/companies/{company_id}/org-units]

  Return AppsCo Company OrgUnits for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer

### Retrieve company orgunits  [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes
        + orgunits (array[string])
        + meta (Paging)

# Company OrgUnit [/api/v2/companies/{company_id}/org-units/{orgunit_id}]

  Return AppsCo Company OrgUnits for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `orgunit_id`: 44 (number) - ID of the Company OrgUnit in the form of an integer

### Retrieve company orgunit  [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes
        + item (Model OrgUnit)

### Add new organization unit [POST]
+ Request
    + Attributes (Setup OrgUnit)
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes
        + orgunit (Model OrgUnit)

### Update organization unit [PATCH]
+ Request
    + Attributes (Setup OrgUnit)
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes
        + orgunit (Model OrgUnit)

### Remove organization unit [DELETE]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (OrgUnit Delete Response)
    

# Company OrgUnit Resources [/api/v2/companies/{company_id}/org-units/{orgunit_id}/applications]

  Return AppsCo Company OrgUnits resources for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `orgunit_id`: 44 (number) - ID of the Company OrgUnit in the form of an integer

### Add resource company orgunit  [POST]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes
        + applications (array[])

# Company OrgUnit Roles [/api/v2/companies/{company_id}/org-units/{orgunit_id}/roles]

  Return AppsCo Company OrgUnits accounts for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `orgunit_id`: 44 (number) - ID of the Company OrgUnit in the form of an integer

### Add accounts company orgunit  [POST]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes
        + `company_roles` (array[])



# Company Domains [/api/v2/companies/{company_id}/domains]

    Return AppsCo Company domains for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer


### Retrieve company domains  [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company Domains)

### Add company domain [POST]
+ Request
    + Attributes (Setup Domain)
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company Domains)


# Company Domain [/api/v2/companies/{company_id}/domains/{domain}]

    Return AppsCo Company domain for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `domain`: 1 (number) - ID of the Company domain in the form of an integer


### Retrieve company domain  [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Model Domain)

### Remove domain [DELETE]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Model Domain)


# Verify Company Domain [/api/v2/companies/{company_id}/domains/{domain}/verify]

    Verify AppsCo Company domain for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `domain`: 1 (number) - ID of the Company domain in the form of an integer

### Verify company domain  [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Model Domain)

# Company Billing Credit Card [/api/v2/companies/{company_id}/billing/cc]

    Return AppsCo Company credit card information for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer


### Retrieve company credit card  [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company CC)

### Add company credit card [POST]
+ Request
    + Attributes (Setup App to OrgUnit)
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company Application)


# Company Billing Public Key [/api/v2/companies/{company_id}/billing/pk]

    Return AppsCo Company public key.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer


### Retrieve company public key  [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company PK)
    
# Company Billing Subscription [/api/v2/companies/{company_id}/billing/subscription]

    Return AppsCo Company subscription information for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer


### Retrieve company subscription  [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company Subscription)

### Add company subscription [POST]
+ Request
    + Attributes (Setup Subscription)
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company Subscription)

### Delete company subscription [DELETE]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company Subscription)
    
# Company Billing Invoice List [/api/v2/companies/{company_id}/billing/invoice/list]

    Return AppsCo Company inovoice list information for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer


### Retrieve company invoice list  [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    +  Attributes (array[Company Invoice Upcoming])

# Company Billing Invoice Upcoming [/api/v2/companies/{company_id}/billing/invoice/upcoming]

    Return AppsCo Company inovoice upcoming information for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer


### Retrieve company invoice upcoming  [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company Invoice Upcoming)

# Company Billing Invoice Send [/api/v2/companies/{company_id}/billing/invoice/{invoiceId}/send]

    Send AppsCo Company inovoice.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + invoiceId: in_1AAEHWJBp3ytiq1AvWN 


### Send billing invoice [POST]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    
        []

# Company Log Events [/api/v2/companies/{company_id}/log/events]

    Return AppsCo Company log events for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer


### Retrieve company log events  [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (array[Company Log Events])

# Company Log [/api/v2/companies/{company_id}/log]

    Return AppsCo Company logs for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer


### Retrieve company logs  [POST]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (array[Company Logs])


# Company Directory Roles [/api/v2/companies/{company_id}/directory/roles]

    Return AppsCo Company directory roles for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer


### Retrieve company directory roles [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes 
        + `company_roles` (array[])
        + meta (Paging)

### Delete company directory roles [DELETE]
+ Request
    + Attributes (Roles Attr)
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes 
        + `company_roles` (array[])
        + meta (Paging)

# Company Directory Role [/api/v2/companies/{company_id}/directory/roles/{companyRole}]

    Return AppsCo Company directory role for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `companyRole`: 103 (number) - ID of the company role in the form of integer

### Retrieve company directory role [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Directory Role)

### Update company directory role [PUT]
+ Request
    + Attributes (Update Role Attr)
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes 
        + `company_roles` (array[])
        + meta (Paging)


# Company Directory Role Resources [/api/v2/companies/{company_id}/directory/roles/{companyRole}/applications]

    Return AppsCo Company directory role resources for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `companyRole`: 103 (number) - ID of the company role in the form of integer


### Retrieve company directory role resources [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes 
        + `applications` (array[])
        + meta (Paging)

# Company Directory Role Can Be Manage [/api/v2/companies/{company_id}/directory/roles/{companyRole}/can-be-managed]

    Return AppsCo Company directory role can be managed for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `companyRole`: 103 (number) - ID of the company role in the form of integer

### Can company directory role be managed [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Role Success Response)

# Company Directory Role Change Password [/api/v2/companies/{company_id}/directory/roles/{companyRole}/change-password]

    Change password AppsCo Company directory role for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `companyRole`: 103 (number) - ID of the company role in the form of integer

### Company directory role change password [POST]
+ Request
    + Attributes (Role Change Pass Attr)
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Role Success Response)


# Company Directory Role Notification [/api/v2/companies/{company_id}/directory/roles/{companyRole}/notifications]

    Return AppsCo Company directory role notifications for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `companyRole`: 103 (number) - ID of the company role in the form of integer

### Company directory role notifications [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (array[Role Notifications])


# Company Directory Role Two Factor Authentication [/api/v2/companies/{company_id}/directory/roles/{companyRole}/2fa]

    Return AppsCo Company directory role two factor authentication for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `companyRole`: 103 (number) - ID of the company role in the form of integer

### Company directory role notifications [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Enabled Response)

# Company Directory Role Import [/api/v2/companies/{company_id}/directory/roles/import]

### Import company directory roles [POST]
+ Attributes
    + file - The CSV file

+ Request (multipart/form-data)
    + Headers

            Authorization: token absdef12345

    + Body

            -----WebKitFormBoundary7Lk1ieut0jQaBl3L
                Content-Disposition: form-data; name="file"; filename="example_import.csv"
                Content-Type: text/csv
            -----WebKitFormBoundary7Lk1ieut0jQaBl3L--

+ Response  200 (application/json)
    + Attributes  (Roles Import)


# Company Directory Role Log [/api/v2/companies/{company_id}/directory/roles/{companyRole}/log]

    Return AppsCo Company directory role log for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `companyRole`: 103 (number) - ID of the company role in the form of integer

### Company directory role logs [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes 
        + log (array[Directory Log], fixed)


# Company Directory Role Org Units [/api/v2/companies/{company_id}/directory/roles/{companyRole}/org-units/{orgUnit}]

    Return AppsCo Company directory role log for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `companyRole`: 103 (number) - ID of the company role in the form of integer
    + `orgUnit`: 103 (number) - ID of the company org unit in the form of integer

### Remove company directory org unit [DELETE]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Remove Directory Org Units)



# Company Directory Available Integrations [/api/v2/companies/{company_id}/integrations/available]

    Return available AppsCo Company directory integrations for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer

### Available company integrations [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes 
        + available_integrations (array[Directory Integrations Available])
        + meta (Paging)


# Company Directory Integration [/api/v2/companies/{company_id}/integrations/available/{integrationAvailable}]

    Return available AppsCo Company directory integrations for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `integrationAvailable`: 1 (number) - ID of the Company directory integration in the form of an integer

### Return company integration [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Directory Integrations Available)


### Activate company integration [POST]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes 
        + authorization_url


# Company Directory Active [/api/v2/companies/{company_id}/integrations/active]

    Return active AppsCo Company directory integrations for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer

### Return active company integrations [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes 
        + active_integrations (array[Directory Integrations Active])
        + meta (Paging)


# Company Directory Active [/api/v2/companies/{company_id}/integrations/active/{integrationActive}]

    Return active AppsCo Company directory integration for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `integrationActive`: 5 (number) - ID of the Company active integration in the form of an integer

### Return active company integration [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes 
        + active_integrations (array[Directory Integrations Active])


# Company Directory Integration Mappings [/api/v2/companies/{company_id}/integrations/active/{integrationActive}/mappings]

    Return AppsCo Company directory mappings for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `integrationActive`: 5 (number) - ID of the Company active integration in the form of an integer

### Return company directory mappings [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes 
        + mappings (array[Directory Integrations Mappings])
        + meta (Paging)

### Fetch company directory mappings [PATCH]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Directory Fetch Mappings)


# Company Directory Integration Mapping [/api/v2/companies/{company_id}/integrations/active/{integrationActive}/mappings/{integrationMapping}]

    Return AppsCo Company directory mapping for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `integrationActive`: 5 (number) - ID of the Company active integration in the form of an integer
    + `integrationMapping`: 72 (number) - ID of the Company mapping in the form of an integer

### Return company directory mapping [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes 
        + mapping (array[Directory Integrations Mappings])
        
### Remove company directory mapping [DELETE]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Role Success Response)
        
### Create company directory mapping [POST]
+ Request
    + Attributes (Setup mapping)
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Role Success Response)
 
# Company Directory Invitation [/api/v2/companies/{company_id}/invitation]

    Return AppsCo Company invitations for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer

### Return company invitations [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes 
        + invitations (array[])
        + meta (Paging)

### Create company invitations [POST]
+ Request
    + Attributes (Setup Company Invitation)
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Create Company Invitation)
        


# Company Directory Resend Invitation [/api/v2/companies/{company_id}/invitation/{invitation}/resend]

    Resend AppsCo Company invitation for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `invitation`: 73925b4e-250b-11e7-854f-0242d77b14e5 - ID of the Company invitation in the form of an integer

### Resend company invitation [PATCH]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company Resend Invitation)


# Company Directory Invitation [/api/v2/companies/{company_id}/invitation/{invitation}]

    Return AppsCo Company invitation for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `invitation`: 73925b4e-250b-11e7-854f-0242d77b14e5 - ID of the Company invitation in the form of an integer

### Return company invitation [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company Resend Invitation)

### Remove company invitation [DELETE]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company Resend Invitation)

# Company Settings [/api/v2/companies/{company_id}/settings]

    Update AppsCo Company settings for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer

### Update company settings [GET]
+ Request
    + Attributes (Setup Company Settings)
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company Model)


# Company Branding [/api/v2/companies/{company_id}/branding]

    Update AppsCo Company branding for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer

### Update company branding [PATCH]
+ Request
    + Attributes (Setup Company Branding)
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company Model)


# Company Logo [/api/v2/companies/{company_id}/logo]

    Update AppsCo Company logo for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer

### Update company logo [POST]
+ Request
    + Headers

            Authorization: token absdef12345
            
    + Body

            -----WebKitFormBoundary7Lk1ieut0jQaBl3L
                Content-Disposition: form-data; name="file"; filename="example_img.png"
                Content-Type: image/png
            -----WebKitFormBoundary7Lk1ieut0jQaBl3L--


+ Response 200 (application/json)
    + Attributes (Company Model)


# Company Signup [/api/v2/companies/{company_id}/signup]

    Return AppsCo Company signup for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer

### Retrive company signup [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes
        + items (array[])
        + meta (Paging)

# Confirm Company Signup Request [/api/v2/companies/{company_id}/signup/request/{companySignupRequest}/confirm]

    Return AppsCo Company signup for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `companySignupRequest` - ID of the Company signup request

### Confirm company signup request [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (OrgUnit Delete Response)


# Delete Company Signup Request [/api/v2/companies/{company_id}/signup-request/{companySignupRequest}]

    Delete AppsCo Company signup for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + `companySignupRequest` - ID of the Company signup request

### Delete company signup request [DELETE]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Signup Delete Response)


# Company Labels [/api/v2/companies/{company_id}/labels]

    Return AppsCo Company labels for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer

### Retrive company labels [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes
        + company_labels (array[])
        + meta (Paging)

### Create company label [POST]
+ Request
    + Attributes (Setup Label)
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company Label)

# Company Label [/api/v2/companies/{company_id}/label/{label}]

    Return AppsCo Company label for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + label - ID of the Company label
    
### Retrive company label [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes
        + company_label (Company Label)


### Remove company label [DELETE]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Response App Model)


# Label Company Roles [/api/v2/companies/{company_id}/label/{label}/company-roles]

    Return AppsCo label company roles for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + label - ID of the Company label
    
### Retrive company label company roles [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes
        + company_roles (array[])
        + meta (Paging)

# Label Company Role [/api/v2/companies/{company_id}/label/{label}/company-roles/{companyRole}]

    Detach AppsCo label company roles for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + label - ID of the Company label
    + companyRole - ID of the Company role
    
### Detach company label company role [DELETE]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Response App Model)


# Label Company Resources [/api/v2/companies/{company_id}/label/{label}/applications]

    Return AppsCo label company resources for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + label - ID of the Company label
    
### Retrive company label company resources [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes
        + applications (array[])
        + meta (Paging)


# Label Company Resource [/api/v2/companies/{company_id}/label/{label}/applications/{application}]

    Detach AppsCo label company resource for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer
    + label - ID of the Company label
    + application - ID of the Company resource
    
### Detach company label company resource [DELETE]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes
        + application (Application)
        + Response (Response App Model)


# Company Statistics Two Factor [/api/v2/companies/{company_id}/statistics/twofa]

    Return AppsCo label company statistics for two factor. 

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer

### Retrive company two factor statistics [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company TwoFa)


# Company Statistics Licences [/api/v2/companies/{company_id}/statistics/licences]

    Return AppsCo label company statistics licences. 

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer

### Retrive company licences [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company Licences)


# Company Statistics User Password Scores [/api/v2/companies/{company_id}/statistics/user-password-scores]

    Return AppsCo label company statistics user password scores. 

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer

### Retrive company user password scores [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company User)


# Company Contacts [/api/v2/companies/{company_id}/contacts]

    Return AppsCo Company contacts for currently logged in user.

+ Parameters
    + `company_id`: 16 (number) - ID of the Company in the form of an integer

### Retrive company contacts [GET]
+ Request
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes
        + contacts (array[])
        + meta (Paging)

### Create company contacts [POST]
+ Request
    + Attributes (Setup Contacts)
    + Headers

            Authorization: token absdef12345

+ Response 200 (application/json)
    + Attributes (Company Contacts)



# Data Structures

## Enabled Response (object)
+ enabled (boolean)

## Code (object)
+  code: 404oookk4ooccgsws2pxjq4rkeccg0co0wsk8 (string) - That is base64 of `client_id` and `client_secret`

## Token (object)
+  token: 7hw0fqyydegws8sg40s40wgco04sgoog404oookk4ooccgsws2pxjq4rkeccg0co0wsk8skccoccsg00cwocwwc80skss04kkwc - Requested user's token

## Dashboard Model (object)
+  `role_id` (number) - Dashboard Role id
+  alias (number) - Dashboard Role alias
+  title (string) - Dashboard Name
+  roles (Dashboard Roles, fixed-type)
+ `default_dashboard` (boolean) - Is this dashboard your default dashboard
+ logo (string) - Dashboard Logo
+ self (string) - Resource location

## Dashboard Roles (object)
+ OWNER (string)
+ ADMIN (string)
+ SHARED (string)

## Dashboard Meta (object)
+ icons (object)
    + icons (array, fixed-type)
        + (string)
    + count (number) - Number of icons
    + self (string) - Application instances resource
+ accounts (string) - Dashboard roles that belong to dashboard
+ applications (string) - Dashboard applications

## Application Icon Model (object)
+ application (string) - Resource location of the application template
+ alias (number) - Application icon alias
+ title (string) - Application title
+ `auth_type` (string) - Authentication type
+ `is_configured` (boolean) - Is Application icon configured
+ `url_editable` (boolean) - Can you edit application icon uri
+ `icon_url` (string) - Application icon
+ url (string ) - Application url
+ images (array[string]) - List of application icons
+ owner (boolean) - Do you own this application?
+ self (string) - Resource location to it self
+ security (object) - Application icon security based on policies
    + `password_strength` (number) - How strong is the password from 0 to 100
    + info (object) - Additional info
        + `upper_case` (boolean) - Does it contain upper case letters
        + `lower_case` (boolean) - Does it contain lower case letters
        + digits (boolean) - Does it contain digits
        + `special_chars` (boolean) - Does it contain special characters
        + length8 (boolean) - Is length greater then 8 characters
        + length16 (boolean) - Is length greater then 16 characters
        + entropy (number) - What is the entropy
    + `last_update` (string) - When is it last updated
    + score (number) - Overall score
+ claims (object) - Claims based on auth type
    + username (string) - User's username for application
    + password (string) - User's password for application
    + note (string) - User's note for application
+ meta (object)
    + log (string) - Log of all the actions on application
    + autologin (string) - Switch authentication types between form fill and autologin
    + subscribers (string) - Accounts that this application is shared to
    + `application-remove` (string) - Remove application
    + `plugin_go` (string) - Attempt login

## Setup password (object)
+ `change_password[oldPassword]` (string) - Old password
+ `change_password[newPassword][plainPassword][first]` (string) - New password first type
+ `change_password[newPassword][plainPassword][second]` (string) - New password second type


## Add app (object)
+ application[resource] (string, required) - Application route

## Setup claims (object)
+ `icon_claims[username]` (string) - User's username for application
+ `icon_claims[password]` (string) - User's password for application
+ `icon_claims[note]` (string) - User's note for application

## Setup app claims (object)
+ `configure_application[title]` (string) - Application title
+ `configure_application[url]` (string) - Application url

## Software Licence (object)
+ name - Name of software licence
+ licence - Name of licence
+ licenceKey - Key of licence
+ numberOfLicences (number) - Number of purchased licences
+ orderNumber - Number of order
+ orderTotal (number) - Total of orders
+ price - Price of order
+ publisher - Name of publisher
+ purchaseDate - Date of purchased order
+ supportEmail - Email of support
+ version - Version of software
+ website - Website

## Setup Software Licence (object)
+ `vault_software_license[name]` (string, required) - Software licence name
+ `vault_software_license[licenceKey]` - Software licence key
+ `vault_software_license[licence]` - Software licence number
+ `vault_software_license[version]` - Software licence version
+ `vault_software_license[publisher]` - Publisher of software licence
+ `vault_software_license[supportEmail]` - Software licence support email
+ `vault_software_license[website]` - Software licence website
+ `vault_software_license[price]` - Software licence price
+ `vault_software_license[orderNumber]` - Software licence number of orders
+ `vault_software_license[numberOfLicences]` - Software number of licence
+ `vault_software_license[orderTotal]` - Total order of licence
+ `vault_software_license[note]` - Note text
+ `vault_software_license[purchaseDate][day]` - Purchased day of software licence
+ `vault_software_license[purchaseDate][month]` - Purchased month of software licence
+ `vault_software_license[purchaseDate][year]` - Purchased year of software licence

## Secure Note (object)
+ title - Title of secure note
+ note - Text of note

## Setup Secure Note (object)
+ `vault_secure_note[title]` (string, required) - Note title
+ `vault_secure_note[note]` - Note text

## Passport (object)
+ name - Name in passport
+ sex (array) - Gender
+ country - Country in passport
+ dateOfBirth - Date of birth
+ expirationDate - Date of passport expiration
+ issuedDate - Date when passport was issued
+ issuingAuthority - Authority that issued the passport
+ nationality - Nationality of person in passport
+ number - Number of passport
+ note - Text of note

## Setup Passport (object)
+ `vault_passport[name]` (string, required) - Name of passport vault
+ `vault_passport[number]` (number) - Passport number
+ `vault_passport[nationality]` - Passport nationality
+ `vault_passport[issuingAuthority]` - Passport issuing authority
+ `vault_passport[note]`- Note
+ `vault_passport[country]` - Country
+ `vault_passport[sex]` - Gender
+ `vault_passport[dateOfBirth][day]` - Day of birth
+ `vault_passport[dateOfBirth][month]` - Month of birth
+ `vault_passport[dateOfBirth][year]` - Year of birth
+ `vault_passport[issuedDate][day]` - Passport issued day
+ `vault_passport[issuedDate][month]` - Passport issued month
+ `vault_passport[issuedDate][year]` - Passport issued year
+ `vault_passport[expirationDate][day]` - Passport expiration day
+ `vault_passport[expirationDate][month]` - Passport expiration month
+ `vault_passport[expirationDate][year]` - Passport expiration year

## Identity (object)
+ name - Name
+ firstName - First name
+ lastName - Last name
+ birthDate - Date of birth
+ sex (array) - Gender, male (m) or female (f)
+ email - Email
+ company - Name of company
+ department - Department of company
+ jobTitle - Job title in company
+ cell - Cell phone number
+ phoneBusiness - Company phone number
+ phoneHome - Home phone number
+ website - Website address
+ note - Text of note

## Setup Identity (object)
+ vaultentities[name] (string, required) - Identity name
+ vaultentities[firstName] (string, required) - First name
+ vaultentities[lastName] (string, required) - Last name
+ vaultentities[sex] - Gender
+ vaultentities[cell] - Cell phone number
+ vaultentities[email] - Email address
+ vaultentities[company] - Company name
+ vaultentities[jobTitle] - Job title
+ vaultentities[department] - Department
+ vaultentities[phoneHome] - Home phone number
+ vaultentities[phoneBusiness] - Business phone number
+ vaultentities[website] - Business website
+ vaultentities[note] - Note

## Credit Card (object)
+ title (required, string) - Title
+ cardHolder - Card holder
+ type (array) - Type of credit card
+ cardNumber - Card number
+ expiryDate - Date when the credit card expire
+ validFrom - Date the credit card is valid from
+ note - Text of note

## Setup Credit Card (object)
+ `vault_cc[title]` (string, required)- Title
+ `vault_cc[cardHolder]` - Name on credit card
+ `vault_cc[cardNumber]` (number, required) - Has to be valid card number
+ `vault_cc[verificationNumber]` (number, required) - Has to be valid verification number
+ `vault_cc[note]` - Note
+ `vault_cc[type]` (number) - Type of credit card
+ `vault_cc[expiryDate][day]` (number)- Expiry day on credit card
+ `vault_cc[expiryDate][month]` (number) - Expiry month on credit card
+ `vault_cc[expiryDate][year]` (number) - Expiry year on credit card
+ `vault_cc[validFrom][day]` (number) - Until valid day on credit card
+ `vault_cc[validFrom][month]` (number) - Until valid mont on credit card
+ `vault_cc[validFrom][year]` (number) - Until valid year on credit card

## Login (object)
+ name - Name of login
+ username - Login username
+ password - Login password
+ url - Login url
+ note - Text of note

## Setup vault login (object)
+ `vault_login[name]` (string) - Vault item name
+ `vault_login[url]` (string) - Vault item url
+ `vault_login[username]` (string) - Vault item username
+ `vault_login[password]` (string) - Vault item password
+ `vault_login[note]` (string) - Vault item note

## Application (object)
+ id (number) - Id of application
+ title - Name of application
+ url - Url of application
+ `url_editable` (boolean) - If url of applications is editable
+ `icon_url` - Url of application's icon
+ `auth_types` (array) - Application authorization type

## Me (object)
+ id (number) - Owner's ID
+ email - Emaile of account's owner
+ `first_name` - First name of account's owner
+ `last_name` - Last name of account's owner
+ timezone - Available timezones
+ gender (array) - Gender
+ country (array) - Available countries
+ phone - Phone number of account's owner
+ `picture_url` - Picture url of account's owner

## Setup me (object)
+ `profile[first_name]` (string) - User's first name
+ `profile[last_name]` (string) - User's last name
+ `profile[timezone]` (string) - Timezone
+ `profile[country]` (string) - User's country
+ `profile[phone]` (string) - User's phone number
+ `profile[gender]` (string) - User's gender male/female

## Company Model (object)
+ alias (number)
+ name (string) - Company Name
+ `contact_email` (string) - Contact email
+ domain (string) - Company domain
+ `intranet_website` (string) - Company internal website on mosaic
+ `remaining_trial_period` (number) - Remaining trial period for AppsCo Business package
+ `trial_period` (number) - How big is the trial period
+ image (string) - Company logo
+ `primary_color`
+ `secondary_color`
+ self - Company self resource
+ meta (object)
    + applications - Company applications
    + settings - Company settings
    + logo - Create Company logo

## AppsCo Identity Model (object)
+ id (number) - Id of the identity
+ `dashboardRole` (object) - List of dashboard roles
+ email
+ timezone
+ country
+ `created_at` (DateTime Model)
+ name - Concat First name and Last name, if not present then email
+ enabled (boolean)
+ `first_name`
+ `last_name`
+ gender
+ `last_login` (DateTime Model)
+ locale
+ phone
+ `picture_url`
+ username
+ roles (array[string])
+ `display_name`
+ `org_units` (array)
+ company (Company Model)
+ meta (object)
    + share - Resource link for sharing application to account
+ self

## Account Application Model (object)
+ application - Application route
+ title - Application name
+ auth_types: unpw (array) - Application authorization type
  + none
  + item
+ `url_editable` (boolean)
+ `application_url` - Application icon
+ url - Application url
+ images (array[string])

## Partner Model (object)
+ address (string) - Partner address
+ `company_name` (string) - Partner name
+ `company_number` (string) - Partner phone
+ `contact_email` (string) - Parner email
+ `company_logo` (string) - Partner logo
 
## Authorized Apps Model (object)
+ created (DateTime Model) - Date when application was created
+ scopes
+ title - Application title
+ description - Application description
+ `icon_url` - Icon url of application
+ active (boolean) - If application is active
+ website - Application website
+ revoke - Application revoke route

## Log Model (object)
+ account (Log Account Model)
+ `created_at` (Log DateTime Model) - Date time when account was created
+ ip - IP address
+ `user_agent` - Information about the browser and operating system
+ type
+ data (array)

## Log Account Model (object)
+ `display_name` - User's name
+ email - User's email
+ image - User's image route

## Log DateTime Model (object)
+ date - Date time in iso
+ `timezone_type` - Timezone type
+ timezone - Name of timezone


## Response App Model (object)
+ message
+ code (number) - Response code
          
## Meta Icons (object)
+ icons - Application icon route

## Notifications Model (object)
+ id (number)
+ body - Notification look
+ imageUrl - Notification image url
+ createdAt - Notification created time


## Paging (object)
+ total (number) - Total number of items
+ page (number) - Current page
+ first (string) - First page in collection
+ last (string) - Last page in collection
+ pages (number) - Number of pages
+ `per_page` (number) - Number of items per page
+ prev (string) - Previous page
+ next (string) - Next page

## DateTime Model (object)
+ date - Date time in iso
+ `timezone_type` (number)
+ `timezone` (string)

## Error Response 403 (object)
+ error: access denied (string)
+ message: Access Denied (string)
+ code: 403 (number)

## Error Response 401 (object)
+ error: unauthorized (string)
+ message: please authenticate with your token (string)
+ code: 401 (number)

## Error Response 422 (object)
+ error: Unprocessable Entity (string)
+ message: "" (string)
+ code: 422 (number)


## Company (object)
+ alias (number)
+ name (string) - Name of company
+ `contact_email` (string) - Contact email
+ `billing_email` (string) - Billing email
+ domain (string) - Domain of company
+ `intranet_website` (string) - Intranet website of company
+ `remaining_trial_period` (number) - Remaining trial period
+ `trial_period` (number) - Trial period
+ image (string) - Image route
+ `primary_color`
+ `secondary_color`
+ self (string) - Company route
+ meta (Meta Company)

## Meta Company (object)
+ applications - Company applications route
+ settings - Company settings route
+ logo - Company logo route

## Setup Company Application (object)
+ `application_templates[]` (string, required) - Company applications route

## Setup App to OrgUnit (object)
+ `applications[]` (string, required) - Route of application which user wants to add to OrgUnit

## Company Application (object)
+ `application_template` (object) - Application template
    + title - Title of application
    + `supported_auth_types`: unpw (array)
        + none
        + item
    + `icon_url` - Icon url
    + url - Application  url
    + `url_editable` (boolean)
    + self - Application route
+ title - Title of application
+ alias (number)
+ `claim_type` - Claim type
+ `auth_type` - Auth type
+ `url_editable` (boolean) - Url editable
+ `application_url` - Application url
+ url - Url route
+ images (array[string]) - Images
+ security (object)
    + info  (object)
        + `not_configured` (number)
        + configured (number)
        + `lowest_score` (number)
    + score (number)
+ `last_login` - Who was last logged in
+ claims (array)
    + username
    + password
+ `org_units` (array[OrgUnits])
+ `last_modified` (object)
    + account - Name of account user
    + date (DateTime Model)
+ `daily_usage` (number)
+ meta (Meta Company App)
+ self

## OrgUnits (object)
+ name - Name of org units
+ description - Description of urg unit
+ alias (number) - Alias
+ meta (object)
    + remove - Remove url

## Meta Company App (object)
+ log - Application log route
+ subscribers - Application subscribers route
+ `update_claims` - Application claims route
+ update - Update
+ `account_claims` - Application account claims route
+ `account_icon`

## Model OrgUnit (object)
+ name - Name of OrgUnit
+ alias (number) - Alias
+ description - Description of OrgUnit
+ parent - Parent route of OrgUnit
+ self - OrgUnit route

## Setup OrgUnit (object)
+ `org_unit[name]` (string, required) - Name of OrgUnit
+ `org_unit[description]` - Description of OrgUnit

## Model Domain
+ alias (number) - ID of domain
+ domain 
+ `crated_at` (DateTime Model)
+ `verified_at` (DateTime Model)
+ `verification_code` - Code for verification
+ company - Company of domain
+ self 

## Setup Domain (object)
+ `company_domain[domain]` 

## Company Domains (object)
+ domains (array[string])
+ verified (number)
+ meta (Paging)

## Create Company Response (object)
+ id (number)
+ `dashboard_roles` (array)
+ email 
+ timezone
+ country 
+ `created_at` (DateTime Model)
+ name
+ enabled (boolean)
+ `first_name`
+ `last_name`
+ gender
+ `last_login` (DateTime Model)
+ locale
+ phone
+ `picture_url`
+ username
+ roles (Dashboard Roles, fixed-type)
+ `display_name`
+ `profile_options` (object)
    + public (boolean)
+ partner (boolean)
+ companies (object)
    + company (array[Company])
    + icons 
    + company_admin (boolean)
+ meta (object)
    + share
    + self
    
## Company CC (object)
+ id (number)
+ object
+ `address_city`
+ `address_country`
+ `address_line1`
+ `address_line1_check`
+ `address_line2`
+ `address_state`
+ `address_zip`
+ `address_zip_check`
+ brand
+ country
+ customer
+ `cvc_check`
+ `dynamic_last4`
+ `exp_month` (number)
+ `exp_year` (number)
+ fingerprint
+ funding
+ last4 (number)
+ metadata (array)
+ name
+ `tokenization_method`

## Company PK (object)
+ stripePublicKey

## Company Subscription (object)
+ currentPeriodStart (DateTime Model)
+ currentPeriodEnd (DateTime Model)
+ startedAt (DateTime Model)
+ plan (Subscription Plan)
+ quantity (number)
+ status

## Subscription Plan (object)
+ id
+ `display_text`
+ interval
+ `interval_count` (number)
+ amount (number)
+ currency

## Setup Subscription (object)
+ `subscription[numUsers]` (number, required)
+ `subscription[period]`

## Company Invoice Upcoming (object)
+ currency
+ date (DateTime Model)
+ total (number)
+ nextPaymentAttempt (DateTime Model)
+ description
+ items (array[Invoice Items])


## Invoice Items (object)
+ id 
+ quantity (number)
+ amount (number)
+ currency
+ description
+ plan (Invoice Item Plan)
+ date (DateTime Model)

## Invoice Item Plan (object)
+ id
+ display_text
+ interval
+ `interval_count` (number)
+ amount (number)
+ currency

## Company Log Events (object)
+ `application_created`
+ `application_claims_updated`
+ `application_updated`
+ `application_remove_from_orgunit`
+ `application_removed`
+ `application_icon_removed`
+ `application_shared`
+ `application_icon_claims_updated`
+ `subscription_updated`
+ `subscription_canceled`
+ `invoice_sent`
+ `credit_card_created`
+ `company_role_removed`
+ `company_role_promoted_to_admin`
+ `company_role_demoted_from_admin`
+ `company_role_account_updated`
+ `company_role_account_password_changed`
+ `company_role_added`
+ `company_roles_imported`
+ `company_role_removed_from_orgunit`
+ `orgunit_created`
+ `orgunit_updated`
+ `org_unit_removed`
+ `application_added_to_orgunit`
+ `account_added_to_orgunit`
+ `company_settings_updated`
+ `company_logo_updated`
+ `account_login_attempt`
+ `account_update_profile`
+ `account_updated_profile_image`
+ `account_generated_partner_token`
+ `account_enabled_two_fa`
+ `account_disabled_two_fa`
+ `account_changed_password`
+ `account_authorized_application`
+ `account_revoked_authorization`

## Company Logs (object)
+ `created_at` (DateTime Model)
+ type
+ ip
+ `user_agent`
+ data (object)
    + contact_email
    + from
    + to
+ company (Company)
+ `initiatior_display_name`
+ `initiatior_email`
+ `initiatior_image`
+ `affected_account_display_name`
+ `affected_account_email`
+ `affected_account_image`

## Roles Attr (object)
+ `roles[]`: https://my.appsco.com/api/v2/companies/16/directory/roles/209

## Account Directory Role (object)
+ id (number)
+ dashboard_roles (array)
+ email
+ timezone
+ country
+ `created_at` (DateTime Model)
+ name
+ enabled (boolean)
+ `first_name`
+ `last_name`
+ gender
+ last_login (DateTime Model)
+ locale
+ phone
+ picture_url
+ username
+ roles (array[])
    + `ROLE_SUPER_ADMIN`
    + `ROLE_PARTNER`
    + `ROLE_USER`
+ display_name
+ profile_options (object)
    + public (boolean)
+ partner (boolean)
+ companies (array[Company])
+ icons
+ `company_admin` (boolean)
+ org_units (array[OrgUnits])
+ meta (object)
    + share
+ self
+ company (Company)
+ roles (Directory Admin Company Roles)
+ alias (number)
+ security (object)
    + `application_score` (number)
    + `two_factor` (boolean)
+ self
+ meta (object) 
    + log
    + applications

## Directory Admin Company Roles (object)
+ `COMPANY_ROLE_EMPLOYEE`
+ `COMPANY_ROLE_ADMIN`

## Directory Admin Roles (object)
+ `ROLE_SUPER_ADMIN`
+ `ROLE_PARTNER`
+ `ROLE_USER`

## Update Role Attr (object)
+ `profile[first_name]`
+ `profile[last_name]`
+ `profile[timezone]`
+ `profile[country]`
+ `profile[phone]`
+ `profile[gender]`
+ `profile[public]` (boolean)

## Role Success Response (object)
+ success (boolean)

## Role Change Pass Attr (object)
+ `update_account_password[newPassword][plainPassword][first]`
+ `update_account_password[newPassword][plainPassword][second]`

## Role Notifications (object)
+ id (number)
+ body
+ imageUrl 
+ createdAt 

## Roles Import (object)
+ total (number)
+ numberOfInvitations (number)
+ numberOfRoles (number)
+ numberOfFailed (number)
+ maxSubscriptionSizeReached (boolean)
  
## Meta Log (object)
+ total (number)
+ page (number)
+ first 
+ last
+ pages (number)
+ `per_page` (number)
+ prev
+ next

## Directory Log (object)
+ account (object)
    + `display_name`
    + email
    + image
+ created_at (DateTime Model)
+ ip 
+ `user_agent`
+ type
+ data (object)

## Remove Directory Org Units (object)
+ account (Account Directory Role)
+ company (Company Model)
+ roles (array)
+ alias (number)
+ security (object)
    + application_score
    + two_factor (boolean)
+ self
+ meta (object) 
    + log
    + applications
    
## Directory Integrations Available (object)
+ title
+ image
+ website
+ self
+ alias (number)

## Active Integrations Domains (object)
+ name 
+ primary (boolean)
+ synced (boolean)

## Directory Integrations Active (object)
+ self
+ integration (Directory Integrations Available)
+ domains (object)
    + companyName (Active Integrations Domains)
+ kind
+ meta (object)
    + mappings

## Directory Integrations Mappings (object)
+ self
+ remote (object)
    + id (number)
    + display_name
    + first_name
    + last_name
    + email
    + `picture_url`
+ local
+ meta (object)
    + create
    
## Directory Fetch Mappings (object)
+ success (boolean)
+ added (number)
+ deleted (number)
+ count (number) 

## Setup mapping (object)
+ `company_role`: https://my-dev.appsco.com/api/v2/companies/16/directory/roles/622

## Company Resend Invitation (object)
+ alias
+ company (Company) 
+ email
+ `first_name`
+ `last_name`
+ `created_at` (DateTime Model)
+ `resent_at` (DateTime Model)
+ `resent_count` (number)
+ self

## Create Company Invitation (object)
+ invitation (Company Resend Invitation)
+ role 

## Setup Company Invitation (object)
+ `invitation[first_name]`
+ `invitation[last_name]`
+ `invitation[email]`

## OrgUnit Delete Response (object)
+ id (number)
+ `dashboard_roles` (array)
+ email 
+ timezone
+ country 
+ `created_at` (DateTime Model)
+ name
+ enabled (boolean)
+ `first_name`
+ `last_name`
+ gender
+ `last_login` (DateTime Model)
+ locale
+ phone
+ `picture_url`
+ username
+ roles (Dashboard Roles, fixed-type)
+ `display_name`
+ `profile_options` (object)
    + public (boolean)
+ partner (boolean)
+ companies (object)
    + company (array[Company])
    + icons 
    + company_admin (boolean)
+ `org_units` (array[OrgUnits])
+ meta (object)
    + share
+ self

## Setup Company Settings (object)
+ `company_settings[name]`
+ `company_settings[contactEmail]`
+ `company_settings[billingEmail]`

## Setup Company Branding (object)
+ `company_branding[primaryColor]`
+ `company_branding[secondaryColor]`

## Signup Delete Response (object)
+ email
+ createdOn
+ self

## Setup Track Events (object)
+ `track_events[event_type]` (string, required)
+ `track_events[field]` (string, required)

## Setup Label (object)
+ `company_label[name]`

## Company Label (object)
+ alias
+ company (Company Model)
+ name
+ cratedAt (DateTime Model)
+ meta 
    + `company_roles` (array[])
    + applications (array[])
    + self

## Company TwoFa (object)
+ active (number)
+ inactive (number)

## Company Licences (object)
+ appscoLicences (number)
+ currentLicences (number)
+ active_users (number)

## Company User (object)
+ id (number)
+ `dashboard_roles` (array)
+ email 
+ timezone
+ country 
+ `created_at` (DateTime Model)
+ name
+ enabled (boolean)
+ `first_name`
+ `last_name`
+ gender
+ `last_login` (DateTime Model)
+ locale
+ phone
+ `picture_url`
+ username
+ roles (Dashboard Roles, fixed-type)
+ `display_name`
+ `profile_options` (object)
    + public (boolean)
+ partner (boolean)
+ companies (array[Companies Array])
+ `application_scores` (array[])

## Meta Share (object)
+ share

## Companies Array (object)
+ company (array[Company])
    + icons 
    + `company_admin`
+ meta (Meta Share)
+ self

## Setup Contacts (object)
+ `contact[first_name]`
+ `contact[last_name]`
+ `contact[email]`

## Company Contacts (object)
+ alias
+ company - Company url 
+ account -  Account url
+ first_name
+ `last_name`
+ `display_name`
+ email
+ createdAt (DateTime Model)
+ self
+ meta
    + `promote_to_user`

## Directory Role (object)